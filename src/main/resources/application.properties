
# Application Name
spring.application.name=zidio

# Database Connection
spring.datasource.url=jdbc:mysql://localhost:3306/zidio?createDtabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=Vasundhara@20
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

#Server
server.port=8080
spring.main.web-application-type=servlet
#reactive dev
spring.profiles.active=dev
spring.devtools.restart.enabled=false

# spring.main.web-application-type=reactive
#JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect

#DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

#SpringConfig
spring.applicationname=auth-service

#JWT
jwt.secret=zidioSecretKey
jwt.expiration=86400000

#Email
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=your-email@gmail.com
spring.mail.password=your-app-password
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

#Cloudinary
cloudinary.cloud_name=YOUR_CLOUD_NAME
cloudinary.api_key=YOUR_API_KEY
cloudinary.api_secret=YOUR_API_SECRET

#FileUpload
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=5MB

#Logging
logging.level.org.springframework.cloud.netflix.eureka.server=INFO
logging.level.com.netflix..eureka=INFO
logging.level.org.springframework.web=INFO
logging.level.org.springframework.cloud.netflix.eureka=DEBUG
logging.level.com.netflix.eureka=DEBUG

# Eureka Client config

spring.application-name =eureka-server

eureka.client.register-with-eureka=false
eureka.client.fetch-registry=false
eureka.instance.prefer-ip-address=true

eureka.instance.hostname=localhost
eureka.instance.appname=eureka-server

eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.server.enable-self-preservation=false

       #Cloude API Gateway
spring:
  application:
    name: api-gateway
  main:
    web-application-type: reactive
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true




#Cloude API Gateway
#spring:
#  application:
#    name: api-gateway
#  main:
#    web-application-type: reactive
#  cloud:
#    gateway:
#      routes:
#        - id: auth-service
#          uri: http://localhost:7070
#          predicates:
#            - Path=/auth/**
#        - id: employee-service
#          uri: http://localhost:7071
#          predicates:
#            - Path=/employee/**
#        - id: recruiter-service
#          uri: http://localhost:7072
#          predicates:
#            - Path=/recruiter/**
#        - id: jobPost-service
#          uri: http://localhost:7073
#          predicates:
#            - Path=/jobPost/**
#        - id: application-service
#          uri: http://localhost:7074
#          predicates:
#            - Path=/application/**
#        - id: admin-service
#         uri: http://localhost:7075
#          predicates:
#           - Path=/admin/**
#
##eureka:
#  client:
#    service-url:
#      defaultZone: http://localhost:8761/eureka/
#    register-with-eureka: true
#    fetch-registry: true
# Spring Security 
##spring.security.user.name=admin
##spring.security.user.password=admin123
#
#





## -----------------------
## Application Info
## -----------------------
#spring.application.name=auth-service
#
## -----------------------
## Database Connection
## -----------------------
#spring.datasource.url=jdbc:mysql://localhost:3306/zidio?createDatabaseIfNotExist=true
#spring.datasource.username=root
#spring.datasource.password=Vasundhara@20
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#
## -----------------------
## Server
## -----------------------
#server.port=8080
#spring.main.web-application-type=servlet
#spring.profiles.active=dev
#spring.devtools.restart.enabled=false
#
## -----------------------
## JPA / Hibernate
## -----------------------
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
#
## -----------------------
## Logging
## -----------------------
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
#logging.level.org.springframework.web=INFO
#logging.level.org.springframework.cloud.netflix.eureka.server=INFO
#logging.level.com.netflix.eureka=INFO
#logging.level.org.springframework.cloud.netflix.eureka=DEBUG
#logging.level.com.netflix.eureka=DEBUG
#
## -----------------------
## JWT
## -----------------------
#jwt.secret=zidioSecretKey
#jwt.expiration=86400000
#
## -----------------------
## Email
## -----------------------
#spring.mail.host=smtp.gmail.com
#spring.mail.port=587
#spring.mail.username=your-email@gmail.com
#spring.mail.password=your-app-password
#spring.mail.properties.mail.smtp.auth=true
#spring.mail.properties.mail.smtp.starttls.enable=true
#
## -----------------------
## Cloudinary
## -----------------------
#cloudinary.cloud_name=YOUR_CLOUD_NAME
#cloudinary.api_key=YOUR_API_KEY
#cloudinary.api_secret=YOUR_API_SECRET
#
## -----------------------
## File Upload
## -----------------------
#spring.servlet.multipart.max-file-size=5MB
#spring.servlet.multipart.max-request-size=5MB
#
## -----------------------
## Eureka Client
## -----------------------
#eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
#eureka.client.register-with-eureka=true
#eureka.client.fetch-registry=true
#eureka.instance.prefer-ip-address=true
#eureka.instance.hostname=localhost
#eureka.instance.appname=eureka-server
#eureka.server.enable-self-preservation=false
#
## -----------------------
## API Gateway Routes (properties format)
## -----------------------
#api.gateway.auth-service.uri=http://localhost:7070
#api.gateway.auth-service.path=/auth/**
#api.gateway.employee-service.uri=http://localhost:7071
#api.gateway.employee-service.path=/employee/**
#api.gateway.recruiter-service.uri=http://localhost:7072
#api.gateway.recruiter-service.path=/recruiter/**
#api.gateway.jobPost-service.uri=http://localhost:7073
#api.gateway.jobPost-service.path=/jobPost/**
#api.gateway.application-service.uri=http://localhost:7074
#api.gateway.application-service.path=/application/**
#api.gateway.admin-service.uri=http://localhost:7075
#api.gateway.admin-service.path=/admin/**
#
## -----------------------
## Spring Boot Actuator Info
## -----------------------
#management.endpoints.web.exposure.include=info
#info.app.name=Zidio
#info.app.version=1.0.0
#info.app.description=Auth & Microservices Application
#info.app.owner=Divya
#
#






















